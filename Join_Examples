# N.1 Query Explanation
This SQL query is about finding the top 10 movies of Rockbuster's data set based on their total revenue. It links several tables through inner joins: payment,
rental, inventory, and film to calculate the total revenue for each movie. After joining these tables, it groups the results by movie title, sorts them by
total revenue (from highest to lowest), and then limits the output to the top 10 movies.

SELECT D.title,
       SUM(A.amount) AS total_revenue
FROM payment A
INNER JOIN rental B ON A.rental_id = B.rental_id
INNER JOIN inventory C ON B.inventory_id = C.inventory_id
INNER JOIN film D ON C.film_id = D.film_id
GROUP BY D.title
ORDER BY SUM(A.amount) DESC
LIMIT 10;

# N.2 Query Explanation
This SQL query is about finding the top 20 customers based on their lifetime value. It links several tables through inner joins: payment, customer, address, 
city, and country to find useful information and calculate the total revenue (or lifetime value) generated by each customer. After joining these tables, it 
groups the results by customer's first name, last name, country, and city where they live, sorts them by total revenue (from highest to lowest), and then 
limits the output to the top 20 customers.

SELECT B.first_name,
       B.last_name,
       E.country,
       D.city,
       SUM(A.amount) AS lifetime_value
FROM payment A
INNER JOIN customer B ON A.customer_id = B.customer_id
INNER JOIN address C ON B.address_id = C.address_id
INNER JOIN city D ON C.city_id = D.city_id
INNER JOIN country E ON D.country_id = E.country_id
GROUP BY B.first_name,
    	 B.last_name,
    	 E.country,
    	 D.city
ORDER BY SUM(A.amount) DESC
LIMIT 20;
